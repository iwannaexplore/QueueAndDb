apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-worker
  template:
    metadata:
      labels:
        app: kafka-worker
    spec:
      containers:
        - name: kafka-worker
          image: docker.io/dimasenko2000/kw-worker:v0.0.3 # Replace with your image name
          ports:
            - containerPort: 8080
          env:
            - name: KAFKA_BROKER_URL
              value: "kafka:9092"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-worker
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: kafka-worker


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-worker
  template:
    metadata:
      labels:
        app: mongo-worker
    spec:
      containers:
        - name: mongo-worker
          image: docker.io/dimasenko2000/db-worker:v0.0.3  # Replace with your image name
          ports:
            - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:latest
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:latest
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka:9092,OUTSIDE://localhost:9092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT"
            - name: KAFKA_LISTENERS
              value: "INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
    - port: 9092
      targetPort: 9092
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: wurstmeister/zookeeper:latest
          ports:
            - containerPort: 2181
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  ports:
    - port: 2181
      targetPort: 2181
  selector:
    app: zookeeper